name: CI/CD Pipeline

on:
  push:
    branches: [ develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ develop, main ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: yarn install

      - name: Build Application
        run: yarn build

  docker:
    name: Build and Publish Docker
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/yourip-app:latest .
          docker tag ghcr.io/${{ github.repository_owner }}/yourip-app:latest ghcr.io/${{ github.repository_owner }}/yourip-app:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository_owner }}/yourip-app:latest
          docker push ghcr.io/${{ github.repository_owner }}/yourip-app:${{ github.ref_name }}

  merge:
    needs: [docker]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Debug Info
        run: |
          echo "Current ref: ${{ github.ref }}"
          echo "Current branch: ${{ github.head_ref }}"
          echo "Base branch: ${{ github.base_ref }}"
          git branch -a
          git status
      
      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `chore: merge develop into main for release ${context.ref.replace('refs/tags/', '')}`,
              body: `Automated PR to merge develop into main for release ${context.ref.replace('refs/tags/', '')}\n\nThis PR was created automatically by the CI workflow.\nPlease review and merge if all checks pass.`,
              head: 'develop',
              base: 'main',
              labels: ['automated', 'release']
            });
            console.log('Created PR:', pr.html_url); 